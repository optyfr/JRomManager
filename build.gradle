plugins {
	id 'java' 
	id "org.sonarqube"
}

sonarqube {
	properties {
		property "sonar.projectKey", "optyfr_JRomManager"
		property "sonar.organization", "optyfr"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

apply plugin: 'java'
sourceCompatibility = 17
targetCompatibility = 17
apply plugin: 'eclipse'

dependencies {
	implementation project(':JRomManager')
}

evaluationDependsOn(project(':JRomManager').path)

task installProperties {
   def props = new Properties()
   props.setProperty('name','optyfr')
   props.setProperty('project','JRomManager')
   props.setProperty('archive',project(':JRomManager').distZip.archivePath.getName())
   def install_dir = file("$buildDir/tmp");
   install_dir.mkdirs();
   def writer = new FileWriter(new File(install_dir,'install.properties'))
   try {
      props.store(writer,null)
      writer.flush()
   } finally {
      writer.close()
   }
}

task sourcesZip(type: Tar, dependsOn: tasks.classes) {
	from ('.') {
		exclude '**/bin'
		exclude '**/build'
		exclude '**/Debug'
		exclude '**/Release'
		exclude '**/.vs'
		exclude '**/.git'
		exclude '**/.gradle'
	}
	classifier 'src'
	compression 'GZIP'
	group 'build'
    archiveBaseName = project(':JRomManager').name + '-' + project(':JRomManager').version
}

build.dependsOn sourcesZip
